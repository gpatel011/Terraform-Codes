#Example
#Cretae S3 bucket
#Update Lock file in the Repo.and compare newly created and old lock file.

# Terraform Settings Block
terraform {
  # Terraform Version
  required_version = ">= 1.4.1"
  required_providers {
    # AWS Provider 
    aws = {
      source  = "hashicorp/aws"
      version = ">= 2.0.0"
    }
    # Random Provider
    random = {
      source  = "hashicorp/random"
      version = "3.0.0"
    }
  }
}

# Provider Block
provider "aws" {
  region = "us-east-1"
  profile = "default" # Defining it for default profile is Optional
}

# Resource Block: Create Random Pet Name 
# Here we are definig the format of the name of the bucket.After doing the "terraform plan" command it creates a bucket with any random name with the 
length 5 and there will be "-" seperator in between all the words.

resource "random_pet" "petname" {
  length    = 5
  separator = "-"
}

# Resource Block: Create AWS S3 Bucket
resource "aws_s3_bucket" "sample" {
  bucket = random_pet.petname.id
  acl    = "public-read"
  region = "us-east-1"  # Comment this if we are going to use AWS Provider v3.x version
}

/*
Output-
# Initialize Terraform
terraform init

ls -lrat

Here u will see 3 files created
.terraform
.terraform.lock.file
.terraform.lock.file-ORIGINAL

# Validate Terraform Configuration files
terraform validate

# Execute Terraform Plan
terraform plan

# Create Resources using Terraform Apply
terraform apply

#Here u will see bucket is created with the length 5.
abc-fbc-lkj-okh-olp
#Same verify it from aws console

# How to take Backup of the file (MEans just copy crrent file to new file.
cp .terraform.lock.hcl .terraform.lock.hcl-FIRST-INIT

# Compare both the lock file and obsever if there is any changes-
diff.terraform.lock.hcl-ORIGINAL .terraform.lock.hcl

#Upgrade the AWS provider version
For AWS Provider, with version constraint version = ">= 2.0.0", it is going to upgrade to latest 3.x.x version with command terraform init -upgrade
# Upgrade Provider Version
terraform init -upgrade

#Review .terraform.lock.hcl.Here u will obsever the version changes in the new lock file.
Compare the files-
diff .terraform.lock.hcl-FIRST-INIT & .terraform.lock.hcl

#Apply Terraform configuration with latest AWS Provider
# Terraform Apply
terraform apply
observation-Should fail due to S3 related latest changes came in AWS v3.x provider when compared to AWS v2.x provider

#Comment region in S3 Resource and try Terraform Apply
It should work.
When we do a major version upgrade to providers, it might break few features.
So with .terraform.lock.hcl, we can avoid this type of issues.

# Comment Region Attribute
# Resource Block: Create AWS S3 Bucket
resource "aws_s3_bucket" "sample" {
  bucket = random_pet.petname.id
  acl    = "public-read"

  #region = "us-west-2"
}

# Terraform Apply
terraform apply

#Clean-Up
# Destroy Resources
terraform destroy

# Delete Terraform Files
rm -rf .terraform    # We are not removing files named ".terraform.lock.hcl, .terraform.lock.hcl-ORIGINAL" which are needed for this demo for you.
rm -rf terraform.tfstate*




